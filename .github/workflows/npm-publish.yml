name: Deploy NPM Package

on:
  push:
    branches: [main, master]
    paths:
      - "Packages/CustomPrismaPackage/**"
      - ".github/workflows/npm-publish.yml"

  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Packages/CustomPrismaPackage

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npm run prisma:generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build package
        run: npm run build


      - name: Check package version matches tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          echo "Tag version: $TAG_VERSION"
          echo "Package version: $PACKAGE_VERSION"
          
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Warning: Tag version ($TAG_VERSION) doesn't match package.json version ($PACKAGE_VERSION)"
            echo "Continuing anyway, but this might indicate an issue with versioning"
          fi

      - name: Create and push tag
        id: create_tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_NAME="v$PACKAGE_VERSION"
          echo "Creating tag: $TAG_NAME"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false